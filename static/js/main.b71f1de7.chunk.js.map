{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/images/defaultImage.jpg","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","defaultImage","followersAccount","viewsAccount","likesAccount","className","s","profile","box","description","src","alt","stats","item","label","quantity","Statistics","title","percentage","statistics","map","stat","style","backgroundColor","Math","floor","random","toString","id","FriendListItem","isOnline","status","width","FriendList","friends","friend_list","friend","TransactionHistory","items","transactionHistory","type","amount","currency","protTypes","PropTypes","arrayOf","shape","string","isRequred","number","App","user","followers","views","likes","statisticalData","friendsData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,qBAAqB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,KAAO,sBAAsB,MAAQ,uBAAuB,SAAW,4B,uPCA/VD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,IAAM,wBAAwB,MAAQ,0BAA0B,YAAY,8BAA8B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,iBCAvPD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,OAAS,+BAA+B,KAAO,+B,2RCA7ID,EAAOC,QAAU,CAAC,YAAc,kC,wlBCAhCD,EAAOC,QAAU,CAAC,mBAAqB,iD,ioECDxB,MAA0B,yC,OCmD1BC,EA/CC,SAAC,GAQV,IAAD,IAPJC,YAOI,MAPG,gEAOH,EANJC,EAMI,EANJA,IACAC,EAKI,EALJA,SAKI,IAJJC,cAII,MAJKC,EAIL,EAHJC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,OACE,qBAAKC,UAAWC,IAAEC,QAAlB,SACE,sBAAKF,UAAWC,IAAEE,IAAlB,UACE,sBAAKH,UAAWC,IAAEG,YAAlB,UACE,qBAAKC,IAAKV,EAAQW,IAAI,cAAcN,UAAWC,IAAEN,SACjD,mBAAGK,UAAWC,IAAET,KAAhB,SAAuBA,IACvB,mBAAGQ,UAAWC,IAAER,IAAhB,SAAsBA,IACtB,mBAAGO,UAAWC,IAAEP,SAAhB,SAA2BA,OAG7B,qBAAIM,UAAWC,IAAEM,MAAjB,UACE,qBAAIP,UAAWC,IAAEO,KAAjB,UACE,sBAAMR,UAAWC,IAAEQ,MAAnB,uBACA,sBAAMT,UAAWC,IAAES,SAAnB,SAA8Bb,OAEhC,qBAAIG,UAAWC,IAAEO,KAAjB,UACE,sBAAMR,UAAWC,IAAEQ,MAAnB,mBACA,sBAAMT,UAAWC,IAAES,SAAnB,SAA8BZ,OAEhC,qBAAIE,UAAWC,IAAEO,KAAjB,UACE,sBAAMR,UAAWC,IAAEQ,MAAnB,mBACA,sBAAMT,UAAWC,IAAES,SAAnB,SAA8BX,gB,uBCS3BY,EApCI,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,EAAeL,EAAf,EAAeA,MAAf,IAAsBM,kBAAtB,MAAmC,EAAnC,SACjB,yBAASb,UAAWC,IAAEa,WAAtB,SACE,sBAAKd,UAAWC,IAAEE,IAAlB,UACGS,GAAS,oBAAIZ,UAAWC,IAAEW,MAAjB,SAAyBA,IAEnC,oBAAIZ,UAAWC,IAAE,aAAjB,SACGM,EAAMQ,KAAI,SAAAC,GAAI,OACb,qBAEEhB,UAAWC,IAAEO,KACbS,MAAO,CACLC,gBAAgB,GAAD,OAdpB,IAAMC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,MAUnD,UAOE,sBAAMtB,UAAWC,IAAEQ,MAAnB,SAA2BO,EAAKP,QAChC,uBAAMT,UAAWC,IAAEY,WAAnB,UACGG,EAAKH,YAAcA,EADtB,SAPKG,EAAKO,e,+BCMPC,EAjBQ,SAAC,GAAD,QAAG7B,cAAH,MAAYC,EAAZ,EAA0BJ,EAA1B,EAA0BA,KAAMiC,EAAhC,EAAgCA,SAAhC,OACrB,qBAAIzB,UAAWC,IAAEO,KAAjB,UACE,sBACER,UAAWC,IAAEyB,OACbT,MAAO,CAAEC,gBAAiBO,EAAW,QAAU,SAEjD,qBAAKzB,UAAWC,IAAEN,OAAQU,IAAKV,EAAQW,IAAKd,EAAMmC,MAAM,SACxD,mBAAG3B,UAAWC,IAAET,KAAhB,SAAuBA,Q,iBCaZoC,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAI7B,UAAWC,IAAE6B,YAAjB,SACGD,EAAQd,KAAI,SAAAgB,GAAM,OAEjB,aADA,CACC,EAAD,eAA0DA,GAA1D,2BAAyCA,EAAOR,W,yCCNvC,SAASS,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAC3C,OACE,wBAAOjC,UAAWC,IAAEiC,mBAApB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAMlB,KAAI,SAAAP,GAAI,OACb,+BACE,6BAAKA,EAAK2B,OACV,6BAAK3B,EAAK4B,SACV,6BAAK5B,EAAK6B,aAHH7B,EAAKe,YAUxBS,EAAmBM,UAAY,CAC7BL,MAAOM,IAAUC,QACfD,IAAUE,MAAM,CACdlB,GAAIgB,IAAUG,OAAOC,UACrBR,KAAMI,IAAUG,OAAOC,UACvBP,OAAQG,IAAUK,OAAOD,UACzBN,SAAUE,IAAUG,OAAOC,c,YCClBE,EApBH,kBACV,gCACE,cAAC,EAAD,CACErD,KAAMsD,EAAK,GAAGtD,KACdC,IAAKqD,EAAK,GAAGrD,IACbC,SAAUoD,EAAK,GAAGpD,SAClBC,OAAQmD,EAAK,GAAGnD,OAChBE,iBAAkBiD,EAAK,GAAGvC,MAAMwC,UAChCjD,aAAcgD,EAAK,GAAGvC,MAAMyC,MAC5BjD,aAAc+C,EAAK,GAAGvC,MAAM0C,QAG9B,cAAC,EAAD,CAAYrC,MAAM,eAAeL,MAAO2C,IACxC,cAAC,EAAD,CAAY3C,MAAO2C,IAEnB,cAAC,EAAD,CAAYrB,QAASsB,IACrB,cAACnB,EAAD,CAAoBC,MAAOmB,QClB/BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b71f1de7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3tfAn\",\"box\":\"Profile_box__2oWuI\",\"description\":\"Profile_description__2gwXT\",\"avatar\":\"Profile_avatar__29BDy\",\"name\":\"Profile_name__3VZZM\",\"tag\":\"Profile_tag__3rkWO\",\"location\":\"Profile_location__Tq1ME\",\"stats\":\"Profile_stats__3E3_n\",\"item\":\"Profile_item__1u16c\",\"label\":\"Profile_label__3UiFZ\",\"quantity\":\"Profile_quantity__3kh39\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__hr_6b\",\"box\":\"Statistics_box__3DVio\",\"title\":\"Statistics_title__2Tw9F\",\"stat-list\":\"Statistics_stat-list__25MYJ\",\"item\":\"Statistics_item__zrQB3\",\"label\":\"Statistics_label__2Te-e\",\"percentage\":\"Statistics_percentage__DOGIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__ibLmL\",\"status\":\"FriendListItem_status__2XfZW\",\"avatar\":\"FriendListItem_avatar__2i1EK\",\"name\":\"FriendListItem_name__1S-4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendList_friend_list__1cvYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__2E5fI\"};","export default __webpack_public_path__ + \"static/media/defaultImage.2e01288c.jpg\";","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\nimport defaultImage from '../images/defaultImage.jpg';\r\n\r\nconst Profile = ({\r\n  name = 'не известно',\r\n  tag,\r\n  location,\r\n  avatar = defaultImage,\r\n  followersAccount,\r\n  viewsAccount,\r\n  likesAccount,\r\n}) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.box}>\r\n        <div className={s.description}>\r\n          <img src={avatar} alt=\"User avatar\" className={s.avatar} />\r\n          <p className={s.name}>{name}</p>\r\n          <p className={s.tag}>{tag}</p>\r\n          <p className={s.location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={s.stats}>\r\n          <li className={s.item}>\r\n            <span className={s.label}>Followers</span>\r\n            <span className={s.quantity}>{followersAccount}</span>\r\n          </li>\r\n          <li className={s.item}>\r\n            <span className={s.label}>Views</span>\r\n            <span className={s.quantity}>{viewsAccount}</span>\r\n          </li>\r\n          <li className={s.item}>\r\n            <span className={s.label}>Likes</span>\r\n            <span className={s.quantity}>{likesAccount}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  followersAccount: PropTypes.number,\r\n  viewsAccount: PropTypes.number,\r\n  likesAccount: PropTypes.number,\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst generateColor = () => {\r\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n};\r\n\r\nconst Statistics = ({ title = '', stats, percentage = 0 }) => (\r\n  <section className={s.statistics}>\r\n    <div className={s.box}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s['stat-list']}>\r\n        {stats.map(stat => (\r\n          <li\r\n            key={stat.id}\r\n            className={s.item}\r\n            style={{\r\n              backgroundColor: `${generateColor()}`,\r\n            }}\r\n          >\r\n            <span className={s.label}>{stat.label}</span>\r\n            <span className={s.percentage}>\r\n              {stat.percentage || percentage}%\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FriendListItem.module.css';\r\nimport defaultImage from '../../images/defaultImage.jpg';\r\n\r\nconst FriendListItem = ({ avatar = defaultImage, name, isOnline }) => (\r\n  <li className={s.item}>\r\n    <span\r\n      className={s.status}\r\n      style={{ backgroundColor: isOnline ? 'green' : 'red' }}\r\n    ></span>\r\n    <img className={s.avatar} src={avatar} alt={name} width=\"96px\" />\r\n    <p className={s.name}>{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem/FriendListItem';\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={s.friend_list}>\r\n    {friends.map(friend => (\r\n      // <FriendListItem key={`friend-list-item-${friend.id}`} friend={friend} />\r\n      <FriendListItem key={`friend-list-item-${friend.id}`} {...friend} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import s from './TransactionHistory.module.css';\r\nimport PropTypes from 'prop-types';\r\nexport default function TransactionHistory({ items }) {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\nTransactionHistory.protTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequred,\r\n      type: PropTypes.string.isRequred,\r\n      amount: PropTypes.number.isRequred,\r\n      currency: PropTypes.string.isRequred,\r\n    }),\r\n  ),\r\n};\r\n","import Profile from './components/Profile';\r\nimport user from './data/user.json';\r\n\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport statisticalData from './data/statistical-data.json';\r\n\r\nimport FriendList from 'components/FriendList';\r\nimport friendsData from 'data/friends.json';\r\n\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\nimport transactions from './data/transactions.json';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Profile\r\n      name={user[0].name}\r\n      tag={user[0].tag}\r\n      location={user[0].location}\r\n      avatar={user[0].avatar}\r\n      followersAccount={user[0].stats.followers}\r\n      viewsAccount={user[0].stats.views}\r\n      likesAccount={user[0].stats.likes}\r\n    />\r\n\r\n    <Statistics title=\"Upload stats\" stats={statisticalData}></Statistics>\r\n    <Statistics stats={statisticalData} />\r\n\r\n    <FriendList friends={friendsData} />\r\n    <TransactionHistory items={transactions} />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react'; //-если есть jsx, реакт в компоненте не нужен(в файлике где он используется)\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\n\nimport './index.css';\nimport './reset.css';\nimport App from './App';\n\n// var classNames = require('classnames');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}